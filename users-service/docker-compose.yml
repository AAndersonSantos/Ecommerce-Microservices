version: '3.8'

services:
  # Serviço Laravel (Users)
  users-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: users-app
    restart: unless-stopped
    volumes:
      - .:/var/www:delegated
      - /var/www/storage
      - /var/www/bootstrap/cache
    environment:
      - DB_CONNECTION=mysql
      - DB_HOST=users-db
      - DB_PORT=3306
      - DB_DATABASE=ecommerce_users
      - DB_USERNAME=root
      - DB_PASSWORD=root
    depends_on:
      - users-db
      - users-redis
    networks:
      - ecommerce-network

  # Banco de Dados MySQL
  users-db:
    image: mysql:8.0
    container_name: users-db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ecommerce_users
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: laravel_user 
      MYSQL_PASSWORD: secret
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 5s
      timeout: 10s
      retries: 10
    volumes:
      - users-mysql-data:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - ecommerce-network

  # Redis para Sessions/Cache (usaremos depois no Carrinho)
  users-redis:
    image: redis:alpine
    container_name: users-redis
    ports:
      - "6379:6379"
    volumes:
      - users-redis-data:/data
    networks:
      - ecommerce-network

  # Nginx (Proxy Reverso)
  users-web:
    image: nginx:alpine
    container_name: users-web
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - .:/var/www
      - ./docker/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - users-app
    networks:
      - ecommerce-network

# Volumes para persistência de dados
volumes:
  users-mysql-data:
  users-redis-data:

# Rede Docker isolada
networks:
  ecommerce-network:
    driver: bridge